{"version":3,"sources":["webpack:///component---src-pages-archive-jsx-7d892815be718f04f97d.js","webpack:///./~/svg-baker-runtime/browser-symbol.js","webpack:///./~/svg-sprite-loader/runtime/browser-sprite.build.js","webpack:///./src/components/icon/download.icon","webpack:///./src/components/icon/facebook.icon","webpack:///./src/components/icon/index.js","webpack:///./src/components/icon/share.icon","webpack:///./src/components/issue/index.jsx","webpack:///./src/components/utils.js","webpack:///./src/pages/archive.jsx"],"names":["webpackJsonp","16","module","exports","__webpack_require__","global","factory","this","createCommonjsModule","fn","SpriteSymbol","ref","id","viewBox","content","prototype","stringify","toString","destroy","this$1","forEach","prop","parse","hasImportNode","document","importNode","doc","DOMParser","parseFromString","documentElement","commonjsGlobal","window","self","deepmerge","root","isMergeableObject","val","nonNullObject","Object","call","emptyTarget","Array","isArray","cloneIfNecessary","value","optionsArgument","clone","defaultArrayMerge","target","source","destination","slice","e","i","indexOf","push","mergeObject","keys","key","array","options","arrayMerge","all","length","Error","reduce","prev","next","namespaces_1","namespaces","svg","name","uri","xlink","default","objectToAttrsString","attrs","map","attr","replace","join","defaultAttrs","wrapInSvgString","attributes","attrsRendered","BrowserSpriteSymbol","SpriteSymbol$$1","apply","arguments","__proto__","create","constructor","prototypeAccessors","isMounted","get","node","createFromExistingNode","getAttribute","outerHTML","unmount","mount","mountTarget","querySelector","render","appendChild","childNodes","parentNode","removeChild","defineProperties","17","mitt","on","type","handler","off","splice","emit","evt","selectAttributes","nodes","matcher","arrayFrom","acc","arrayfied","matched","filter","concat","encoder","url","specialUrlCharsPattern","match","charCodeAt","toUpperCase","updateReferences","startsWith","replaceWith","href","xLinkAttrName","newUrl","setAttributeNS","xLinkNS","obj","svg$1","xlink$1","defaultConfig","style","Sprite","config","symbols","add","symbol","existing","find","remove","s","has","stringifiedSymbols","sprite","defaultConfig$1","autoConfigure","mountTo","syncUrlsWithBaseTag","listenLocationChangeEvent","locationChangeEvent","locationChangeAngularEmitter","usagesToUpdate","moveGradientsOutsideSymbol","arrayLike","ua","navigator","userAgent","browser","isChrome","test","isFirefox","isIE","isEdge","dispatchEvent","data","event","createEvent","initCustomEvent","evalStylesIEWorkaround","updatedNodes","querySelectorAll","textContent","getUrlWithoutFragment","location","split","eventName","angular","run","$rootScope","$on","oldUrl","defaultSelector","selector","insertBefore","attList","attSelector","updateUrls","references","startsWithEncoded","replaceWithEncoded","localName","Events","MOUNT","SYMBOL_MOUNT","BrowserSprite","Sprite$$1","cfg","emitter","_emitter","_autoConfigure","baseUrl","getElementsByTagName","handleLocationChange","_handleLocationChange","bind","addEventListener","spriteNode","symbolNode","detail","isNewSymbol","attach","removeEventListener","prepend","mountNode","usages","ready$1","definition","listener","fns","hack","doScroll","domContentLoaded","loaded","readyState","shift","setTimeout","spriteNodeId","spriteGlobalVarName","isSpriteExists","loadSprite","getElementById","body","sprite$1","317","use","90","55","_interopRequireDefault","__esModule","_react","_react2","Icon","_ref","icon","width","height","fill","createElement","xlinkHref","319","140","_propTypes","_propTypes2","_gatsbyLink","_utils","Issue","issue","d","Date","date_of_issue","formatedDate","showMonthDate","className","withPrefix","path","number","title","propTypes","PropTypes","shape","isRequired","string","273","56","monthNames","getUTCMonth","getFullYear","showDayDate","getDate","143","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","pageQuery","undefined","_reactHelmet","_reactHelmet2","_issue","_issue2","_icon","_icon2","_facebook","_share","_share2","_download","_download2","PAGE_TITLE","ICON_SIZE","ICON_COLOR","getShareUri","encodeURIComponent","ArchivePage","_React$Component","props","_this","allDataJson","edges","issues","sort","a","b","currentIssue","bg","React","createRef","share","download","showIssue","current","src","archive_img","alt","_this2","onMouseEnter","Download","Share","Component"],"mappings":"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","file":"component---src-pages-archive-jsx-7d892815be718f04f97d.js","sourcesContent":["webpackJsonp([63642485605921],{\n\n/***/ 16:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\n\t\t true ? module.exports = factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t(global.BrowserSpriteSymbol = factory());\n\t}(this, (function () { 'use strict';\n\t\n\tvar SpriteSymbol = function SpriteSymbol(ref) {\n\t  var id = ref.id;\n\t  var viewBox = ref.viewBox;\n\t  var content = ref.content;\n\t\n\t  this.id = id;\n\t  this.viewBox = viewBox;\n\t  this.content = content;\n\t};\n\t\n\t/**\n\t * @return {string}\n\t */\n\tSpriteSymbol.prototype.stringify = function stringify () {\n\t  return this.content;\n\t};\n\t\n\t/**\n\t * @return {string}\n\t */\n\tSpriteSymbol.prototype.toString = function toString () {\n\t  return this.stringify();\n\t};\n\t\n\tSpriteSymbol.prototype.destroy = function destroy () {\n\t    var this$1 = this;\n\t\n\t  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n\t};\n\t\n\t/**\n\t * @param {string} content\n\t * @return {Element}\n\t */\n\tvar parse = function (content) {\n\t  var hasImportNode = !!document.importNode;\n\t  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\t\n\t  /**\n\t   * Fix for browser which are throwing WrongDocumentError\n\t   * if you insert an element which is not part of the document\n\t   * @see http://stackoverflow.com/a/7986519/4624403\n\t   */\n\t  if (hasImportNode) {\n\t    return document.importNode(doc, true);\n\t  }\n\t\n\t  return doc;\n\t};\n\t\n\tvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\t\n\t\n\t\n\t\n\t\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\t\n\tvar deepmerge = createCommonjsModule(function (module, exports) {\n\t(function (root, factory) {\n\t    if (false) {\n\t        undefined(factory);\n\t    } else {\n\t        module.exports = factory();\n\t    }\n\t}(commonjsGlobal, function () {\n\t\n\tfunction isMergeableObject(val) {\n\t    var nonNullObject = val && typeof val === 'object';\n\t\n\t    return nonNullObject\n\t        && Object.prototype.toString.call(val) !== '[object RegExp]'\n\t        && Object.prototype.toString.call(val) !== '[object Date]'\n\t}\n\t\n\tfunction emptyTarget(val) {\n\t    return Array.isArray(val) ? [] : {}\n\t}\n\t\n\tfunction cloneIfNecessary(value, optionsArgument) {\n\t    var clone = optionsArgument && optionsArgument.clone === true;\n\t    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n\t}\n\t\n\tfunction defaultArrayMerge(target, source, optionsArgument) {\n\t    var destination = target.slice();\n\t    source.forEach(function(e, i) {\n\t        if (typeof destination[i] === 'undefined') {\n\t            destination[i] = cloneIfNecessary(e, optionsArgument);\n\t        } else if (isMergeableObject(e)) {\n\t            destination[i] = deepmerge(target[i], e, optionsArgument);\n\t        } else if (target.indexOf(e) === -1) {\n\t            destination.push(cloneIfNecessary(e, optionsArgument));\n\t        }\n\t    });\n\t    return destination\n\t}\n\t\n\tfunction mergeObject(target, source, optionsArgument) {\n\t    var destination = {};\n\t    if (isMergeableObject(target)) {\n\t        Object.keys(target).forEach(function (key) {\n\t            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n\t        });\n\t    }\n\t    Object.keys(source).forEach(function (key) {\n\t        if (!isMergeableObject(source[key]) || !target[key]) {\n\t            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n\t        } else {\n\t            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n\t        }\n\t    });\n\t    return destination\n\t}\n\t\n\tfunction deepmerge(target, source, optionsArgument) {\n\t    var array = Array.isArray(source);\n\t    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n\t    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\t\n\t    if (array) {\n\t        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n\t    } else {\n\t        return mergeObject(target, source, optionsArgument)\n\t    }\n\t}\n\t\n\tdeepmerge.all = function deepmergeAll(array, optionsArgument) {\n\t    if (!Array.isArray(array) || array.length < 2) {\n\t        throw new Error('first argument should be an array with at least two elements')\n\t    }\n\t\n\t    // we are sure there are at least 2 values, so it is safe to have no initial value\n\t    return array.reduce(function(prev, next) {\n\t        return deepmerge(prev, next, optionsArgument)\n\t    })\n\t};\n\t\n\treturn deepmerge\n\t\n\t}));\n\t});\n\t\n\tvar namespaces_1 = createCommonjsModule(function (module, exports) {\n\tvar namespaces = {\n\t  svg: {\n\t    name: 'xmlns',\n\t    uri: 'http://www.w3.org/2000/svg'\n\t  },\n\t  xlink: {\n\t    name: 'xmlns:xlink',\n\t    uri: 'http://www.w3.org/1999/xlink'\n\t  }\n\t};\n\t\n\texports.default = namespaces;\n\tmodule.exports = exports.default;\n\t});\n\t\n\t/**\n\t * @param {Object} attrs\n\t * @return {string}\n\t */\n\tvar objectToAttrsString = function (attrs) {\n\t  return Object.keys(attrs).map(function (attr) {\n\t    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n\t    return (attr + \"=\\\"\" + value + \"\\\"\");\n\t  }).join(' ');\n\t};\n\t\n\tvar svg = namespaces_1.svg;\n\tvar xlink = namespaces_1.xlink;\n\t\n\tvar defaultAttrs = {};\n\tdefaultAttrs[svg.name] = svg.uri;\n\tdefaultAttrs[xlink.name] = xlink.uri;\n\t\n\t/**\n\t * @param {string} [content]\n\t * @param {Object} [attributes]\n\t * @return {string}\n\t */\n\tvar wrapInSvgString = function (content, attributes) {\n\t  if ( content === void 0 ) content = '';\n\t\n\t  var attrs = deepmerge(defaultAttrs, attributes || {});\n\t  var attrsRendered = objectToAttrsString(attrs);\n\t  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n\t};\n\t\n\tvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n\t  function BrowserSpriteSymbol () {\n\t    SpriteSymbol$$1.apply(this, arguments);\n\t  }\n\t\n\t  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n\t  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n\t  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\t\n\t  var prototypeAccessors = { isMounted: {} };\n\t\n\t  prototypeAccessors.isMounted.get = function () {\n\t    return !!this.node;\n\t  };\n\t\n\t  /**\n\t   * @param {Element} node\n\t   * @return {BrowserSpriteSymbol}\n\t   */\n\t  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n\t    return new BrowserSpriteSymbol({\n\t      id: node.getAttribute('id'),\n\t      viewBox: node.getAttribute('viewBox'),\n\t      content: node.outerHTML\n\t    });\n\t  };\n\t\n\t  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n\t    if (this.isMounted) {\n\t      this.unmount();\n\t    }\n\t    SpriteSymbol$$1.prototype.destroy.call(this);\n\t  };\n\t\n\t  /**\n\t   * @param {Element|string} target\n\t   * @return {Element}\n\t   */\n\t  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n\t    if (this.isMounted) {\n\t      return this.node;\n\t    }\n\t\n\t    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n\t    var node = this.render();\n\t    this.node = node;\n\t\n\t    mountTarget.appendChild(node);\n\t\n\t    return node;\n\t  };\n\t\n\t  /**\n\t   * @return {Element}\n\t   */\n\t  BrowserSpriteSymbol.prototype.render = function render () {\n\t    var content = this.stringify();\n\t    return parse(wrapInSvgString(content)).childNodes[0];\n\t  };\n\t\n\t  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n\t    this.node.parentNode.removeChild(this.node);\n\t  };\n\t\n\t  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\t\n\t  return BrowserSpriteSymbol;\n\t}(SpriteSymbol));\n\t\n\treturn BrowserSpriteSymbol;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 17:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\n\t\t true ? module.exports = factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t(global.BrowserSprite = factory());\n\t}(this, (function () { 'use strict';\n\t\n\tvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\t\n\t\n\t\n\t\n\t\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\t\n\tvar deepmerge = createCommonjsModule(function (module, exports) {\n\t(function (root, factory) {\n\t    if (false) {\n\t        undefined(factory);\n\t    } else {\n\t        module.exports = factory();\n\t    }\n\t}(commonjsGlobal, function () {\n\t\n\tfunction isMergeableObject(val) {\n\t    var nonNullObject = val && typeof val === 'object';\n\t\n\t    return nonNullObject\n\t        && Object.prototype.toString.call(val) !== '[object RegExp]'\n\t        && Object.prototype.toString.call(val) !== '[object Date]'\n\t}\n\t\n\tfunction emptyTarget(val) {\n\t    return Array.isArray(val) ? [] : {}\n\t}\n\t\n\tfunction cloneIfNecessary(value, optionsArgument) {\n\t    var clone = optionsArgument && optionsArgument.clone === true;\n\t    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n\t}\n\t\n\tfunction defaultArrayMerge(target, source, optionsArgument) {\n\t    var destination = target.slice();\n\t    source.forEach(function(e, i) {\n\t        if (typeof destination[i] === 'undefined') {\n\t            destination[i] = cloneIfNecessary(e, optionsArgument);\n\t        } else if (isMergeableObject(e)) {\n\t            destination[i] = deepmerge(target[i], e, optionsArgument);\n\t        } else if (target.indexOf(e) === -1) {\n\t            destination.push(cloneIfNecessary(e, optionsArgument));\n\t        }\n\t    });\n\t    return destination\n\t}\n\t\n\tfunction mergeObject(target, source, optionsArgument) {\n\t    var destination = {};\n\t    if (isMergeableObject(target)) {\n\t        Object.keys(target).forEach(function (key) {\n\t            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n\t        });\n\t    }\n\t    Object.keys(source).forEach(function (key) {\n\t        if (!isMergeableObject(source[key]) || !target[key]) {\n\t            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n\t        } else {\n\t            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n\t        }\n\t    });\n\t    return destination\n\t}\n\t\n\tfunction deepmerge(target, source, optionsArgument) {\n\t    var array = Array.isArray(source);\n\t    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n\t    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\t\n\t    if (array) {\n\t        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n\t    } else {\n\t        return mergeObject(target, source, optionsArgument)\n\t    }\n\t}\n\t\n\tdeepmerge.all = function deepmergeAll(array, optionsArgument) {\n\t    if (!Array.isArray(array) || array.length < 2) {\n\t        throw new Error('first argument should be an array with at least two elements')\n\t    }\n\t\n\t    // we are sure there are at least 2 values, so it is safe to have no initial value\n\t    return array.reduce(function(prev, next) {\n\t        return deepmerge(prev, next, optionsArgument)\n\t    })\n\t};\n\t\n\treturn deepmerge\n\t\n\t}));\n\t});\n\t\n\t//      \n\t// An event handler can take an optional event argument\n\t// and should not return a value\n\t                                          \n\t// An array of all currently registered event handlers for a type\n\t                                            \n\t// A map of event types and their corresponding event handlers.\n\t                        \n\t                                   \n\t  \n\t\n\t/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n\t *  @name mitt\n\t *  @returns {Mitt}\n\t */\n\tfunction mitt(all                 ) {\n\t\tall = all || Object.create(null);\n\t\n\t\treturn {\n\t\t\t/**\n\t\t\t * Register an event handler for the given type.\n\t\t\t *\n\t\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t\t * @param  {Function} handler Function to call in response to given event\n\t\t\t * @memberOf mitt\n\t\t\t */\n\t\t\ton: function on(type        , handler              ) {\n\t\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Remove an event handler for the given type.\n\t\t\t *\n\t\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t\t * @param  {Function} handler Handler function to remove\n\t\t\t * @memberOf mitt\n\t\t\t */\n\t\t\toff: function off(type        , handler              ) {\n\t\t\t\tif (all[type]) {\n\t\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Invoke all handlers for the given type.\n\t\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t\t *\n\t\t\t * @param {String} type  The event type to invoke\n\t\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t\t * @memberof mitt\n\t\t\t */\n\t\t\temit: function emit(type        , evt     ) {\n\t\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar namespaces_1 = createCommonjsModule(function (module, exports) {\n\tvar namespaces = {\n\t  svg: {\n\t    name: 'xmlns',\n\t    uri: 'http://www.w3.org/2000/svg'\n\t  },\n\t  xlink: {\n\t    name: 'xmlns:xlink',\n\t    uri: 'http://www.w3.org/1999/xlink'\n\t  }\n\t};\n\t\n\texports.default = namespaces;\n\tmodule.exports = exports.default;\n\t});\n\t\n\t/**\n\t * @param {Object} attrs\n\t * @return {string}\n\t */\n\tvar objectToAttrsString = function (attrs) {\n\t  return Object.keys(attrs).map(function (attr) {\n\t    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n\t    return (attr + \"=\\\"\" + value + \"\\\"\");\n\t  }).join(' ');\n\t};\n\t\n\tvar svg = namespaces_1.svg;\n\tvar xlink = namespaces_1.xlink;\n\t\n\tvar defaultAttrs = {};\n\tdefaultAttrs[svg.name] = svg.uri;\n\tdefaultAttrs[xlink.name] = xlink.uri;\n\t\n\t/**\n\t * @param {string} [content]\n\t * @param {Object} [attributes]\n\t * @return {string}\n\t */\n\tvar wrapInSvgString = function (content, attributes) {\n\t  if ( content === void 0 ) content = '';\n\t\n\t  var attrs = deepmerge(defaultAttrs, attributes || {});\n\t  var attrsRendered = objectToAttrsString(attrs);\n\t  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n\t};\n\t\n\tvar svg$1 = namespaces_1.svg;\n\tvar xlink$1 = namespaces_1.xlink;\n\t\n\tvar defaultConfig = {\n\t  attrs: ( obj = {\n\t    style: ['position: absolute', 'width: 0', 'height: 0'].join('; ')\n\t  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n\t};\n\tvar obj;\n\t\n\tvar Sprite = function Sprite(config) {\n\t  this.config = deepmerge(defaultConfig, config || {});\n\t  this.symbols = [];\n\t};\n\t\n\t/**\n\t * Add new symbol. If symbol with the same id exists it will be replaced.\n\t * @param {SpriteSymbol} symbol\n\t * @return {boolean} `true` - symbol was added, `false` - replaced\n\t */\n\tSprite.prototype.add = function add (symbol) {\n\t  var ref = this;\n\t    var symbols = ref.symbols;\n\t  var existing = this.find(symbol.id);\n\t\n\t  if (existing) {\n\t    symbols[symbols.indexOf(existing)] = symbol;\n\t    return false;\n\t  }\n\t\n\t  symbols.push(symbol);\n\t  return true;\n\t};\n\t\n\t/**\n\t * Remove symbol & destroy it\n\t * @param {string} id\n\t * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n\t */\n\tSprite.prototype.remove = function remove (id) {\n\t  var ref = this;\n\t    var symbols = ref.symbols;\n\t  var symbol = this.find(id);\n\t\n\t  if (symbol) {\n\t    symbols.splice(symbols.indexOf(symbol), 1);\n\t    symbol.destroy();\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t/**\n\t * @param {string} id\n\t * @return {SpriteSymbol|null}\n\t */\n\tSprite.prototype.find = function find (id) {\n\t  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n\t};\n\t\n\t/**\n\t * @param {string} id\n\t * @return {boolean}\n\t */\n\tSprite.prototype.has = function has (id) {\n\t  return this.find(id) !== null;\n\t};\n\t\n\t/**\n\t * @return {string}\n\t */\n\tSprite.prototype.stringify = function stringify () {\n\t  var ref = this.config;\n\t    var attrs = ref.attrs;\n\t  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n\t  return wrapInSvgString(stringifiedSymbols, attrs);\n\t};\n\t\n\t/**\n\t * @return {string}\n\t */\n\tSprite.prototype.toString = function toString () {\n\t  return this.stringify();\n\t};\n\t\n\tSprite.prototype.destroy = function destroy () {\n\t  this.symbols.forEach(function (s) { return s.destroy(); });\n\t};\n\t\n\tvar SpriteSymbol = function SpriteSymbol(ref) {\n\t  var id = ref.id;\n\t  var viewBox = ref.viewBox;\n\t  var content = ref.content;\n\t\n\t  this.id = id;\n\t  this.viewBox = viewBox;\n\t  this.content = content;\n\t};\n\t\n\t/**\n\t * @return {string}\n\t */\n\tSpriteSymbol.prototype.stringify = function stringify () {\n\t  return this.content;\n\t};\n\t\n\t/**\n\t * @return {string}\n\t */\n\tSpriteSymbol.prototype.toString = function toString () {\n\t  return this.stringify();\n\t};\n\t\n\tSpriteSymbol.prototype.destroy = function destroy () {\n\t    var this$1 = this;\n\t\n\t  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n\t};\n\t\n\t/**\n\t * @param {string} content\n\t * @return {Element}\n\t */\n\tvar parse = function (content) {\n\t  var hasImportNode = !!document.importNode;\n\t  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\t\n\t  /**\n\t   * Fix for browser which are throwing WrongDocumentError\n\t   * if you insert an element which is not part of the document\n\t   * @see http://stackoverflow.com/a/7986519/4624403\n\t   */\n\t  if (hasImportNode) {\n\t    return document.importNode(doc, true);\n\t  }\n\t\n\t  return doc;\n\t};\n\t\n\tvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n\t  function BrowserSpriteSymbol () {\n\t    SpriteSymbol$$1.apply(this, arguments);\n\t  }\n\t\n\t  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n\t  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n\t  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\t\n\t  var prototypeAccessors = { isMounted: {} };\n\t\n\t  prototypeAccessors.isMounted.get = function () {\n\t    return !!this.node;\n\t  };\n\t\n\t  /**\n\t   * @param {Element} node\n\t   * @return {BrowserSpriteSymbol}\n\t   */\n\t  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n\t    return new BrowserSpriteSymbol({\n\t      id: node.getAttribute('id'),\n\t      viewBox: node.getAttribute('viewBox'),\n\t      content: node.outerHTML\n\t    });\n\t  };\n\t\n\t  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n\t    if (this.isMounted) {\n\t      this.unmount();\n\t    }\n\t    SpriteSymbol$$1.prototype.destroy.call(this);\n\t  };\n\t\n\t  /**\n\t   * @param {Element|string} target\n\t   * @return {Element}\n\t   */\n\t  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n\t    if (this.isMounted) {\n\t      return this.node;\n\t    }\n\t\n\t    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n\t    var node = this.render();\n\t    this.node = node;\n\t\n\t    mountTarget.appendChild(node);\n\t\n\t    return node;\n\t  };\n\t\n\t  /**\n\t   * @return {Element}\n\t   */\n\t  BrowserSpriteSymbol.prototype.render = function render () {\n\t    var content = this.stringify();\n\t    return parse(wrapInSvgString(content)).childNodes[0];\n\t  };\n\t\n\t  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n\t    this.node.parentNode.removeChild(this.node);\n\t  };\n\t\n\t  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\t\n\t  return BrowserSpriteSymbol;\n\t}(SpriteSymbol));\n\t\n\tvar defaultConfig$1 = {\n\t  /**\n\t   * Should following options be automatically configured:\n\t   * - `syncUrlsWithBaseTag`\n\t   * - `locationChangeAngularEmitter`\n\t   * - `moveGradientsOutsideSymbol`\n\t   * @type {boolean}\n\t   */\n\t  autoConfigure: true,\n\t\n\t  /**\n\t   * Default mounting selector\n\t   * @type {string}\n\t   */\n\t  mountTo: 'body',\n\t\n\t  /**\n\t   * Fix disappearing SVG elements when <base href> exists.\n\t   * Executes when sprite mounted.\n\t   * @see http://stackoverflow.com/a/18265336/796152\n\t   * @see https://github.com/everdimension/angular-svg-base-fix\n\t   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n\t   * @type {boolean}\n\t   */\n\t  syncUrlsWithBaseTag: false,\n\t\n\t  /**\n\t   * Should sprite listen custom location change event\n\t   * @type {boolean}\n\t   */\n\t  listenLocationChangeEvent: true,\n\t\n\t  /**\n\t   * Custom window event name which should be emitted to update sprite urls\n\t   * @type {string}\n\t   */\n\t  locationChangeEvent: 'locationChange',\n\t\n\t  /**\n\t   * Emit location change event in Angular automatically\n\t   * @type {boolean}\n\t   */\n\t  locationChangeAngularEmitter: false,\n\t\n\t  /**\n\t   * Selector to find symbols usages when updating sprite urls\n\t   * @type {string}\n\t   */\n\t  usagesToUpdate: 'use[*|href]',\n\t\n\t  /**\n\t   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n\t   * Executes when sprite is rendered, but not mounted.\n\t   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n\t   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n\t   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n\t   * @type {boolean}\n\t   */\n\t  moveGradientsOutsideSymbol: false\n\t};\n\t\n\t/**\n\t * @param {*} arrayLike\n\t * @return {Array}\n\t */\n\tvar arrayFrom = function (arrayLike) {\n\t  return Array.prototype.slice.call(arrayLike, 0);\n\t};\n\t\n\tvar ua = navigator.userAgent;\n\t\n\tvar browser = {\n\t  isChrome: /chrome/i.test(ua),\n\t  isFirefox: /firefox/i.test(ua),\n\t\n\t  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n\t  isIE: /msie/i.test(ua) || /trident/i.test(ua),\n\t  isEdge: /edge/i.test(ua)\n\t};\n\t\n\t/**\n\t * @param {string} name\n\t * @param {*} data\n\t */\n\tvar dispatchEvent = function (name, data) {\n\t  var event = document.createEvent('CustomEvent');\n\t  event.initCustomEvent(name, false, false, data);\n\t  window.dispatchEvent(event);\n\t};\n\t\n\t/**\n\t * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n\t * This trick will trigger IE to read and use any existing SVG <style> tags.\n\t * @see https://github.com/iconic/SVGInjector/issues/23\n\t * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n\t *\n\t * @param {Element} node DOM Element to search <style> tags in\n\t * @return {Array<HTMLStyleElement>}\n\t */\n\tvar evalStylesIEWorkaround = function (node) {\n\t  var updatedNodes = [];\n\t\n\t  arrayFrom(node.querySelectorAll('style'))\n\t    .forEach(function (style) {\n\t      style.textContent += '';\n\t      updatedNodes.push(style);\n\t    });\n\t\n\t  return updatedNodes;\n\t};\n\t\n\t/**\n\t * @param {string} [url] If not provided - current URL will be used\n\t * @return {string}\n\t */\n\tvar getUrlWithoutFragment = function (url) {\n\t  return (url || window.location.href).split('#')[0];\n\t};\n\t\n\t/* global angular */\n\t/**\n\t * @param {string} eventName\n\t */\n\tvar locationChangeAngularEmitter = function (eventName) {\n\t  angular.module('ng').run(['$rootScope', function ($rootScope) {\n\t    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n\t      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n\t    });\n\t  }]);\n\t};\n\t\n\tvar defaultSelector = 'linearGradient, radialGradient, pattern';\n\t\n\t/**\n\t * @param {Element} svg\n\t * @param {string} [selector]\n\t * @return {Element}\n\t */\n\tvar moveGradientsOutsideSymbol = function (svg, selector) {\n\t  if ( selector === void 0 ) selector = defaultSelector;\n\t\n\t  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n\t    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n\t      symbol.parentNode.insertBefore(node, symbol);\n\t    });\n\t  });\n\t  return svg;\n\t};\n\t\n\t/**\n\t * @param {NodeList} nodes\n\t * @param {Function} [matcher]\n\t * @return {Attr[]}\n\t */\n\tfunction selectAttributes(nodes, matcher) {\n\t  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n\t    if (!node.attributes) {\n\t      return acc;\n\t    }\n\t\n\t    var arrayfied = arrayFrom(node.attributes);\n\t    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n\t    return acc.concat(matched);\n\t  }, []);\n\t\n\t  return attrs;\n\t}\n\t\n\t/**\n\t * @param {NodeList|Node} nodes\n\t * @param {boolean} [clone=true]\n\t * @return {string}\n\t */\n\t\n\tvar xLinkNS = namespaces_1.xlink.uri;\n\tvar xLinkAttrName = 'xlink:href';\n\t\n\t// eslint-disable-next-line no-useless-escape\n\tvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\t\n\tfunction encoder(url) {\n\t  return url.replace(specialUrlCharsPattern, function (match) {\n\t    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n\t  });\n\t}\n\t\n\t/**\n\t * @param {NodeList} nodes\n\t * @param {string} startsWith\n\t * @param {string} replaceWith\n\t * @return {NodeList}\n\t */\n\tfunction updateReferences(nodes, startsWith, replaceWith) {\n\t  arrayFrom(nodes).forEach(function (node) {\n\t    var href = node.getAttribute(xLinkAttrName);\n\t    if (href && href.indexOf(startsWith) === 0) {\n\t      var newUrl = href.replace(startsWith, replaceWith);\n\t      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n\t    }\n\t  });\n\t\n\t  return nodes;\n\t}\n\t\n\t/**\n\t * List of SVG attributes to update url() target in them\n\t */\n\tvar attList = [\n\t  'clipPath',\n\t  'colorProfile',\n\t  'src',\n\t  'cursor',\n\t  'fill',\n\t  'filter',\n\t  'marker',\n\t  'markerStart',\n\t  'markerMid',\n\t  'markerEnd',\n\t  'mask',\n\t  'stroke',\n\t  'style'\n\t];\n\t\n\tvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\t\n\t/**\n\t * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n\t * @param {Element} svg\n\t * @param {NodeList} references\n\t * @param {string|RegExp} startsWith\n\t * @param {string} replaceWith\n\t * @return {void}\n\t *\n\t * @example\n\t * const sprite = document.querySelector('svg.sprite');\n\t * const usages = document.querySelectorAll('use');\n\t * updateUrls(sprite, usages, '#', 'prefix#');\n\t */\n\tvar updateUrls = function (svg, references, startsWith, replaceWith) {\n\t  var startsWithEncoded = encoder(startsWith);\n\t  var replaceWithEncoded = encoder(replaceWith);\n\t\n\t  var nodes = svg.querySelectorAll(attSelector);\n\t  var attrs = selectAttributes(nodes, function (ref) {\n\t    var localName = ref.localName;\n\t    var value = ref.value;\n\t\n\t    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n\t  });\n\t\n\t  attrs.forEach(function (attr) { return attr.value = attr.value.replace(startsWithEncoded, replaceWithEncoded); });\n\t  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n\t};\n\t\n\t/**\n\t * Internal emitter events\n\t * @enum\n\t * @private\n\t */\n\tvar Events = {\n\t  MOUNT: 'mount',\n\t  SYMBOL_MOUNT: 'symbol_mount'\n\t};\n\t\n\tvar BrowserSprite = (function (Sprite$$1) {\n\t  function BrowserSprite(cfg) {\n\t    var this$1 = this;\n\t    if ( cfg === void 0 ) cfg = {};\n\t\n\t    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\t\n\t    var emitter = mitt();\n\t    this._emitter = emitter;\n\t    this.node = null;\n\t\n\t    var ref = this;\n\t    var config = ref.config;\n\t\n\t    if (config.autoConfigure) {\n\t      this._autoConfigure(cfg);\n\t    }\n\t\n\t    if (config.syncUrlsWithBaseTag) {\n\t      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n\t      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n\t    }\n\t\n\t    var handleLocationChange = this._handleLocationChange.bind(this);\n\t    this._handleLocationChange = handleLocationChange;\n\t\n\t    // Provide way to update sprite urls externally via dispatching custom window event\n\t    if (config.listenLocationChangeEvent) {\n\t      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n\t    }\n\t\n\t    // Emit location change event in Angular automatically\n\t    if (config.locationChangeAngularEmitter) {\n\t      locationChangeAngularEmitter(config.locationChangeEvent);\n\t    }\n\t\n\t    // After sprite mounted\n\t    emitter.on(Events.MOUNT, function (spriteNode) {\n\t      if (config.moveGradientsOutsideSymbol) {\n\t        moveGradientsOutsideSymbol(spriteNode);\n\t      }\n\t    });\n\t\n\t    // After symbol mounted into sprite\n\t    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n\t      if (config.moveGradientsOutsideSymbol) {\n\t        moveGradientsOutsideSymbol(symbolNode.parentNode);\n\t      }\n\t\n\t      if (browser.isIE || browser.isEdge) {\n\t        evalStylesIEWorkaround(symbolNode);\n\t      }\n\t    });\n\t  }\n\t\n\t  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n\t  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n\t  BrowserSprite.prototype.constructor = BrowserSprite;\n\t\n\t  var prototypeAccessors = { isMounted: {} };\n\t\n\t  /**\n\t   * @return {boolean}\n\t   */\n\t  prototypeAccessors.isMounted.get = function () {\n\t    return !!this.node;\n\t  };\n\t\n\t  /**\n\t   * Automatically configure following options\n\t   * - `syncUrlsWithBaseTag`\n\t   * - `locationChangeAngularEmitter`\n\t   * - `moveGradientsOutsideSymbol`\n\t   * @param {Object} cfg\n\t   * @private\n\t   */\n\t  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n\t    var ref = this;\n\t    var config = ref.config;\n\t\n\t    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n\t      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n\t    }\n\t\n\t    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n\t      config.locationChangeAngularEmitter = 'angular' in window;\n\t    }\n\t\n\t    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n\t      config.moveGradientsOutsideSymbol = browser.isFirefox;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @param {Event} event\n\t   * @param {Object} event.detail\n\t   * @param {string} event.detail.oldUrl\n\t   * @param {string} event.detail.newUrl\n\t   * @private\n\t   */\n\t  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n\t    var ref = event.detail;\n\t    var oldUrl = ref.oldUrl;\n\t    var newUrl = ref.newUrl;\n\t    this.updateUrls(oldUrl, newUrl);\n\t  };\n\t\n\t  /**\n\t   * Add new symbol. If symbol with the same id exists it will be replaced.\n\t   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n\t   * @fires Events#SYMBOL_MOUNT\n\t   * @param {BrowserSpriteSymbol} symbol\n\t   * @return {boolean} `true` - symbol was added, `false` - replaced\n\t   */\n\t  BrowserSprite.prototype.add = function add (symbol) {\n\t    var sprite = this;\n\t    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\t\n\t    if (this.isMounted && isNewSymbol) {\n\t      symbol.mount(sprite.node);\n\t      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n\t    }\n\t\n\t    return isNewSymbol;\n\t  };\n\t\n\t  /**\n\t   * Attach to existing DOM node\n\t   * @param {string|Element} target\n\t   * @return {Element|null} attached DOM Element. null if node to attach not found.\n\t   */\n\t  BrowserSprite.prototype.attach = function attach (target) {\n\t    var this$1 = this;\n\t\n\t    var sprite = this;\n\t\n\t    if (sprite.isMounted) {\n\t      return sprite.node;\n\t    }\n\t\n\t    /** @type Element */\n\t    var node = typeof target === 'string' ? document.querySelector(target) : target;\n\t    sprite.node = node;\n\t\n\t    // Already added symbols needs to be mounted\n\t    this.symbols.forEach(function (symbol) {\n\t      symbol.mount(sprite.node);\n\t      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n\t    });\n\t\n\t    // Create symbols from existing DOM nodes, add and mount them\n\t    arrayFrom(node.querySelectorAll('symbol'))\n\t      .forEach(function (symbolNode) {\n\t        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n\t        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n\t        sprite.add(symbol);\n\t      });\n\t\n\t    this._emitter.emit(Events.MOUNT, node);\n\t\n\t    return node;\n\t  };\n\t\n\t  BrowserSprite.prototype.destroy = function destroy () {\n\t    var ref = this;\n\t    var config = ref.config;\n\t    var symbols = ref.symbols;\n\t    var _emitter = ref._emitter;\n\t\n\t    symbols.forEach(function (s) { return s.destroy(); });\n\t\n\t    _emitter.off('*');\n\t    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\t\n\t    if (this.isMounted) {\n\t      this.unmount();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @fires Events#MOUNT\n\t   * @param {string|Element} [target]\n\t   * @param {boolean} [prepend=false]\n\t   * @return {Element|null} rendered sprite node. null if mount node not found.\n\t   */\n\t  BrowserSprite.prototype.mount = function mount (target, prepend) {\n\t    if ( target === void 0 ) target = this.config.mountTo;\n\t    if ( prepend === void 0 ) prepend = false;\n\t\n\t    var sprite = this;\n\t\n\t    if (sprite.isMounted) {\n\t      return sprite.node;\n\t    }\n\t\n\t    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n\t    var node = sprite.render();\n\t    this.node = node;\n\t\n\t    if (prepend && mountNode.childNodes[0]) {\n\t      mountNode.insertBefore(node, mountNode.childNodes[0]);\n\t    } else {\n\t      mountNode.appendChild(node);\n\t    }\n\t\n\t    this._emitter.emit(Events.MOUNT, node);\n\t\n\t    return node;\n\t  };\n\t\n\t  /**\n\t   * @return {Element}\n\t   */\n\t  BrowserSprite.prototype.render = function render () {\n\t    return parse(this.stringify());\n\t  };\n\t\n\t  /**\n\t   * Detach sprite from the DOM\n\t   */\n\t  BrowserSprite.prototype.unmount = function unmount () {\n\t    this.node.parentNode.removeChild(this.node);\n\t  };\n\t\n\t  /**\n\t   * Update URLs in sprite and usage elements\n\t   * @param {string} oldUrl\n\t   * @param {string} newUrl\n\t   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n\t   */\n\t  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n\t    if (!this.isMounted) {\n\t      return false;\n\t    }\n\t\n\t    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\t\n\t    updateUrls(\n\t      this.node,\n\t      usages,\n\t      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n\t      ((getUrlWithoutFragment(newUrl)) + \"#\")\n\t    );\n\t\n\t    return true;\n\t  };\n\t\n\t  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\t\n\t  return BrowserSprite;\n\t}(Sprite));\n\t\n\tvar ready$1 = createCommonjsModule(function (module) {\n\t/*!\n\t  * domready (c) Dustin Diaz 2014 - License MIT\n\t  */\n\t!function (name, definition) {\n\t\n\t  { module.exports = definition(); }\n\t\n\t}('domready', function () {\n\t\n\t  var fns = [], listener\n\t    , doc = document\n\t    , hack = doc.documentElement.doScroll\n\t    , domContentLoaded = 'DOMContentLoaded'\n\t    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\t\n\t\n\t  if (!loaded)\n\t  { doc.addEventListener(domContentLoaded, listener = function () {\n\t    doc.removeEventListener(domContentLoaded, listener);\n\t    loaded = 1;\n\t    while (listener = fns.shift()) { listener(); }\n\t  }); }\n\t\n\t  return function (fn) {\n\t    loaded ? setTimeout(fn, 0) : fns.push(fn);\n\t  }\n\t\n\t});\n\t});\n\t\n\tvar spriteNodeId = '__SVG_SPRITE_NODE__';\n\tvar spriteGlobalVarName = '__SVG_SPRITE__';\n\tvar isSpriteExists = !!window[spriteGlobalVarName];\n\t\n\t// eslint-disable-next-line import/no-mutable-exports\n\tvar sprite;\n\t\n\tif (isSpriteExists) {\n\t  sprite = window[spriteGlobalVarName];\n\t} else {\n\t  sprite = new BrowserSprite({ attrs: { id: spriteNodeId } });\n\t  window[spriteGlobalVarName] = sprite;\n\t}\n\t\n\tvar loadSprite = function () {\n\t  /**\n\t   * Check for page already contains sprite node\n\t   * If found - attach to and reuse it's content\n\t   * If not - render and mount the new sprite\n\t   */\n\t  var existing = document.getElementById(spriteNodeId);\n\t\n\t  if (existing) {\n\t    sprite.attach(existing);\n\t  } else {\n\t    sprite.mount(document.body, true);\n\t  }\n\t};\n\t\n\tif (document.body) {\n\t  loadSprite();\n\t} else {\n\t  ready$1(loadSprite);\n\t}\n\t\n\tvar sprite$1 = sprite;\n\t\n\treturn sprite$1;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar SpriteSymbol = __webpack_require__(16);\n\tvar sprite = __webpack_require__(17);\n\tvar symbol = new SpriteSymbol({\n\t  \"id\": \"download\",\n\t  \"use\": \"download-usage\",\n\t  \"viewBox\": \"0 0 24 24\",\n\t  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" id=\\\"download\\\"><path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\" /><path fill=\\\"#010101\\\" d=\\\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\\\" /></symbol>\"\n\t});\n\tvar result = sprite.add(symbol);\n\tmodule.exports = symbol\n\n/***/ }),\n\n/***/ 90:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar SpriteSymbol = __webpack_require__(16);\n\tvar sprite = __webpack_require__(17);\n\tvar symbol = new SpriteSymbol({\n\t  \"id\": \"facebook\",\n\t  \"use\": \"facebook-usage\",\n\t  \"viewBox\": \"0 0 30 30\",\n\t  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 30 30\\\" id=\\\"facebook\\\">\\n<path d=\\\"M16.3,11.4V10c0-0.7,0.5-0.9,0.8-0.9h2V6h-2.8c-3.1,0-3.8,2.3-3.8,3.8v1.6h-1.8v2.2V15h1.8v9h3.6v-9h2.7l0.1-1.4l0.2-2.2\\n\\tH16.3z\\\" />\\n</symbol>\"\n\t});\n\tvar result = sprite.add(symbol);\n\tmodule.exports = symbol\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Icon = function Icon(_ref) {\n\t  var icon = _ref.icon,\n\t      width = _ref.width,\n\t      height = _ref.height,\n\t      fill = _ref.fill;\n\t  return _react2.default.createElement(\n\t    'svg',\n\t    { viewBox: icon.viewBox, width: width, height: height, fill: fill },\n\t    _react2.default.createElement('use', { xlinkHref: '#' + icon.id })\n\t  );\n\t};\n\t\n\texports.default = Icon;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 319:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar SpriteSymbol = __webpack_require__(16);\n\tvar sprite = __webpack_require__(17);\n\tvar symbol = new SpriteSymbol({\n\t  \"id\": \"share\",\n\t  \"use\": \"share-usage\",\n\t  \"viewBox\": \"0 0 24 24\",\n\t  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 24 24\\\" id=\\\"share\\\">\\n<path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n<path d=\\\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\\\" />\\n</symbol>\"\n\t});\n\tvar result = sprite.add(symbol);\n\tmodule.exports = symbol\n\n/***/ }),\n\n/***/ 140:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _gatsbyLink = __webpack_require__(28);\n\t\n\tvar _utils = __webpack_require__(56);\n\t\n\t__webpack_require__(273);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Issue = function Issue(_ref) {\n\t  var issue = _ref.issue;\n\t\n\t  var d = new Date(issue.date_of_issue);\n\t  var formatedDate = (0, _utils.showMonthDate)(d);\n\t  return _react2.default.createElement(\n\t    'article',\n\t    { className: 'issue' },\n\t    _react2.default.createElement(\n\t      'a',\n\t      { href: (0, _gatsbyLink.withPrefix)(issue.path), target: '_blank' },\n\t      'N\\xB0',\n\t      issue.number,\n\t      ' \\u2014 ',\n\t      formatedDate,\n\t      _react2.default.createElement('br', null),\n\t      issue.title.toUpperCase()\n\t    )\n\t  );\n\t};\n\t\n\tIssue.propTypes = {\n\t  issue: _propTypes2.default.shape({\n\t    number: _propTypes2.default.number.isRequired,\n\t    title: _propTypes2.default.string.isRequired,\n\t    date_of_issue: _propTypes2.default.string.isRequired,\n\t    path: _propTypes2.default.string.isRequired\n\t  }).isRequired\n\t};\n\t\n\texports.default = Issue;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 273:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tvar monthNames = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\n\t\n\texports.default = {\n\t  showMonthDate: function showMonthDate(d) {\n\t    return monthNames[d.getUTCMonth()] + ' ' + d.getFullYear();\n\t  },\n\t  showDayDate: function showDayDate(d) {\n\t    return d.getDate() + ' ' + monthNames[d.getUTCMonth()] + ' ' + d.getFullYear();\n\t  }\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 143:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(28);\n\t\n\tvar _reactHelmet = __webpack_require__(37);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _issue = __webpack_require__(140);\n\t\n\tvar _issue2 = _interopRequireDefault(_issue);\n\t\n\tvar _icon = __webpack_require__(55);\n\t\n\tvar _icon2 = _interopRequireDefault(_icon);\n\t\n\tvar _facebook = __webpack_require__(90);\n\t\n\tvar _facebook2 = _interopRequireDefault(_facebook);\n\t\n\tvar _share = __webpack_require__(319);\n\t\n\tvar _share2 = _interopRequireDefault(_share);\n\t\n\tvar _download = __webpack_require__(317);\n\t\n\tvar _download2 = _interopRequireDefault(_download);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global graphql */\n\t\n\tvar PAGE_TITLE = 'Archives | Figure Figure';\n\tvar ICON_SIZE = 24;\n\tvar ICON_COLOR = 'black';\n\t\n\tvar getShareUri = function getShareUri(issue) {\n\t  var path = 'https://figurefigure.fr/#!publication/' + issue.number;\n\t  return 'https://facebook.com/sharer.php?u=' + encodeURIComponent(path);\n\t};\n\t\n\tvar ArchivePage = function (_React$Component) {\n\t  _inherits(ArchivePage, _React$Component);\n\t\n\t  function ArchivePage(props) {\n\t    _classCallCheck(this, ArchivePage);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    var data = props.data.allDataJson.edges[0].node;\n\t    _this.issues = data.issues.sort(function (a, b) {\n\t      return b.number - a.number;\n\t    });\n\t    _this.currentIssue = _this.issues.length ? _this.issues[0] : undefined;\n\t    _this.bg = _react2.default.createRef();\n\t    _this.share = _react2.default.createRef();\n\t    _this.download = _react2.default.createRef();\n\t    return _this;\n\t  }\n\t\n\t  ArchivePage.prototype.showIssue = function showIssue(issue) {\n\t    this.bg.current.src = (0, _gatsbyLink.withPrefix)(issue.archive_img);\n\t    this.bg.current.alt = issue.title;\n\t    this.share.current.href = getShareUri(issue);\n\t    this.download.current.href = (0, _gatsbyLink.withPrefix)(issue.path);\n\t  };\n\t\n\t  ArchivePage.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    return _react2.default.createElement(\n\t      'main',\n\t      { className: 'row' },\n\t      _react2.default.createElement(_reactHelmet2.default, { title: PAGE_TITLE }),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'col-auto issue-grid vh-site' },\n\t        _react2.default.createElement(\n\t          'ul',\n\t          null,\n\t          this.issues.map(function (issue) {\n\t            return _react2.default.createElement(\n\t              'li',\n\t              { key: 'archive item ' + issue.number, onMouseEnter: _this2.showIssue.bind(_this2, issue) },\n\t              _react2.default.createElement(_issue2.default, { issue: issue })\n\t            );\n\t          })\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'col vh-site issue-content' },\n\t        _react2.default.createElement(\n\t          'a',\n\t          { href: (0, _gatsbyLink.withPrefix)(this.currentIssue.path) },\n\t          _react2.default.createElement('img', { ref: this.bg, className: 'h-100 issue_img', src: (0, _gatsbyLink.withPrefix)(this.currentIssue.archive_img), alt: this.currentIssue.title })\n\t        ),\n\t        _react2.default.createElement(\n\t          'span',\n\t          { className: 'h-100 issue-btn-list' },\n\t          _react2.default.createElement(\n\t            'a',\n\t            { className: 'btn', ref: this.download, target: '_blank', href: (0, _gatsbyLink.withPrefix)(this.currentIssue.path), download: true },\n\t            _react2.default.createElement(_icon2.default, { icon: _download2.default, width: ICON_SIZE, height: ICON_SIZE, fill: ICON_COLOR })\n\t          ),\n\t          _react2.default.createElement('br', null),\n\t          _react2.default.createElement(\n\t            'a',\n\t            { className: 'btn', ref: this.share, target: '_blank', href: getShareUri(this.currentIssue) },\n\t            _react2.default.createElement(_icon2.default, { icon: _share2.default, width: ICON_SIZE, height: ICON_SIZE, fill: ICON_COLOR })\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return ArchivePage;\n\t}(_react2.default.Component);\n\t\n\texports.default = ArchivePage;\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-archive-jsx-7d892815be718f04f97d.js","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSpriteSymbol = factory());\n}(this, (function () { 'use strict';\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nreturn BrowserSpriteSymbol;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/svg-baker-runtime/browser-symbol.js\n// module id = 16\n// module chunks = 63642485605921 263791100135453","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSprite = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\n//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n// An array of all currently registered event handlers for a type\n                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar svg$1 = namespaces_1.svg;\nvar xlink$1 = namespaces_1.xlink;\n\nvar defaultConfig = {\n  attrs: ( obj = {\n    style: ['position: absolute', 'width: 0', 'height: 0'].join('; ')\n  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n};\nvar obj;\n\nvar Sprite = function Sprite(config) {\n  this.config = deepmerge(defaultConfig, config || {});\n  this.symbols = [];\n};\n\n/**\n * Add new symbol. If symbol with the same id exists it will be replaced.\n * @param {SpriteSymbol} symbol\n * @return {boolean} `true` - symbol was added, `false` - replaced\n */\nSprite.prototype.add = function add (symbol) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var existing = this.find(symbol.id);\n\n  if (existing) {\n    symbols[symbols.indexOf(existing)] = symbol;\n    return false;\n  }\n\n  symbols.push(symbol);\n  return true;\n};\n\n/**\n * Remove symbol & destroy it\n * @param {string} id\n * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n */\nSprite.prototype.remove = function remove (id) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var symbol = this.find(id);\n\n  if (symbol) {\n    symbols.splice(symbols.indexOf(symbol), 1);\n    symbol.destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {string} id\n * @return {SpriteSymbol|null}\n */\nSprite.prototype.find = function find (id) {\n  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n};\n\n/**\n * @param {string} id\n * @return {boolean}\n */\nSprite.prototype.has = function has (id) {\n  return this.find(id) !== null;\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.stringify = function stringify () {\n  var ref = this.config;\n    var attrs = ref.attrs;\n  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n  return wrapInSvgString(stringifiedSymbols, attrs);\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSprite.prototype.destroy = function destroy () {\n  this.symbols.forEach(function (s) { return s.destroy(); });\n};\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nvar defaultConfig$1 = {\n  /**\n   * Should following options be automatically configured:\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @type {boolean}\n   */\n  autoConfigure: true,\n\n  /**\n   * Default mounting selector\n   * @type {string}\n   */\n  mountTo: 'body',\n\n  /**\n   * Fix disappearing SVG elements when <base href> exists.\n   * Executes when sprite mounted.\n   * @see http://stackoverflow.com/a/18265336/796152\n   * @see https://github.com/everdimension/angular-svg-base-fix\n   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n   * @type {boolean}\n   */\n  syncUrlsWithBaseTag: false,\n\n  /**\n   * Should sprite listen custom location change event\n   * @type {boolean}\n   */\n  listenLocationChangeEvent: true,\n\n  /**\n   * Custom window event name which should be emitted to update sprite urls\n   * @type {string}\n   */\n  locationChangeEvent: 'locationChange',\n\n  /**\n   * Emit location change event in Angular automatically\n   * @type {boolean}\n   */\n  locationChangeAngularEmitter: false,\n\n  /**\n   * Selector to find symbols usages when updating sprite urls\n   * @type {string}\n   */\n  usagesToUpdate: 'use[*|href]',\n\n  /**\n   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n   * Executes when sprite is rendered, but not mounted.\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n   * @type {boolean}\n   */\n  moveGradientsOutsideSymbol: false\n};\n\n/**\n * @param {*} arrayLike\n * @return {Array}\n */\nvar arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n};\n\nvar ua = navigator.userAgent;\n\nvar browser = {\n  isChrome: /chrome/i.test(ua),\n  isFirefox: /firefox/i.test(ua),\n\n  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n  isIE: /msie/i.test(ua) || /trident/i.test(ua),\n  isEdge: /edge/i.test(ua)\n};\n\n/**\n * @param {string} name\n * @param {*} data\n */\nvar dispatchEvent = function (name, data) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(name, false, false, data);\n  window.dispatchEvent(event);\n};\n\n/**\n * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n * This trick will trigger IE to read and use any existing SVG <style> tags.\n * @see https://github.com/iconic/SVGInjector/issues/23\n * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n *\n * @param {Element} node DOM Element to search <style> tags in\n * @return {Array<HTMLStyleElement>}\n */\nvar evalStylesIEWorkaround = function (node) {\n  var updatedNodes = [];\n\n  arrayFrom(node.querySelectorAll('style'))\n    .forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n\n  return updatedNodes;\n};\n\n/**\n * @param {string} [url] If not provided - current URL will be used\n * @return {string}\n */\nvar getUrlWithoutFragment = function (url) {\n  return (url || window.location.href).split('#')[0];\n};\n\n/* global angular */\n/**\n * @param {string} eventName\n */\nvar locationChangeAngularEmitter = function (eventName) {\n  angular.module('ng').run(['$rootScope', function ($rootScope) {\n    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n    });\n  }]);\n};\n\nvar defaultSelector = 'linearGradient, radialGradient, pattern';\n\n/**\n * @param {Element} svg\n * @param {string} [selector]\n * @return {Element}\n */\nvar moveGradientsOutsideSymbol = function (svg, selector) {\n  if ( selector === void 0 ) selector = defaultSelector;\n\n  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n      symbol.parentNode.insertBefore(node, symbol);\n    });\n  });\n  return svg;\n};\n\n/**\n * @param {NodeList} nodes\n * @param {Function} [matcher]\n * @return {Attr[]}\n */\nfunction selectAttributes(nodes, matcher) {\n  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n    if (!node.attributes) {\n      return acc;\n    }\n\n    var arrayfied = arrayFrom(node.attributes);\n    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n    return acc.concat(matched);\n  }, []);\n\n  return attrs;\n}\n\n/**\n * @param {NodeList|Node} nodes\n * @param {boolean} [clone=true]\n * @return {string}\n */\n\nvar xLinkNS = namespaces_1.xlink.uri;\nvar xLinkAttrName = 'xlink:href';\n\n// eslint-disable-next-line no-useless-escape\nvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\nfunction encoder(url) {\n  return url.replace(specialUrlCharsPattern, function (match) {\n    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n  });\n}\n\n/**\n * @param {NodeList} nodes\n * @param {string} startsWith\n * @param {string} replaceWith\n * @return {NodeList}\n */\nfunction updateReferences(nodes, startsWith, replaceWith) {\n  arrayFrom(nodes).forEach(function (node) {\n    var href = node.getAttribute(xLinkAttrName);\n    if (href && href.indexOf(startsWith) === 0) {\n      var newUrl = href.replace(startsWith, replaceWith);\n      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * List of SVG attributes to update url() target in them\n */\nvar attList = [\n  'clipPath',\n  'colorProfile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'markerStart',\n  'markerMid',\n  'markerEnd',\n  'mask',\n  'stroke',\n  'style'\n];\n\nvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\n/**\n * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n * @param {Element} svg\n * @param {NodeList} references\n * @param {string|RegExp} startsWith\n * @param {string} replaceWith\n * @return {void}\n *\n * @example\n * const sprite = document.querySelector('svg.sprite');\n * const usages = document.querySelectorAll('use');\n * updateUrls(sprite, usages, '#', 'prefix#');\n */\nvar updateUrls = function (svg, references, startsWith, replaceWith) {\n  var startsWithEncoded = encoder(startsWith);\n  var replaceWithEncoded = encoder(replaceWith);\n\n  var nodes = svg.querySelectorAll(attSelector);\n  var attrs = selectAttributes(nodes, function (ref) {\n    var localName = ref.localName;\n    var value = ref.value;\n\n    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n  });\n\n  attrs.forEach(function (attr) { return attr.value = attr.value.replace(startsWithEncoded, replaceWithEncoded); });\n  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n};\n\n/**\n * Internal emitter events\n * @enum\n * @private\n */\nvar Events = {\n  MOUNT: 'mount',\n  SYMBOL_MOUNT: 'symbol_mount'\n};\n\nvar BrowserSprite = (function (Sprite$$1) {\n  function BrowserSprite(cfg) {\n    var this$1 = this;\n    if ( cfg === void 0 ) cfg = {};\n\n    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\n    var emitter = mitt();\n    this._emitter = emitter;\n    this.node = null;\n\n    var ref = this;\n    var config = ref.config;\n\n    if (config.autoConfigure) {\n      this._autoConfigure(cfg);\n    }\n\n    if (config.syncUrlsWithBaseTag) {\n      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n    }\n\n    var handleLocationChange = this._handleLocationChange.bind(this);\n    this._handleLocationChange = handleLocationChange;\n\n    // Provide way to update sprite urls externally via dispatching custom window event\n    if (config.listenLocationChangeEvent) {\n      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n    }\n\n    // Emit location change event in Angular automatically\n    if (config.locationChangeAngularEmitter) {\n      locationChangeAngularEmitter(config.locationChangeEvent);\n    }\n\n    // After sprite mounted\n    emitter.on(Events.MOUNT, function (spriteNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(spriteNode);\n      }\n    });\n\n    // After symbol mounted into sprite\n    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(symbolNode.parentNode);\n      }\n\n      if (browser.isIE || browser.isEdge) {\n        evalStylesIEWorkaround(symbolNode);\n      }\n    });\n  }\n\n  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n  BrowserSprite.prototype.constructor = BrowserSprite;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  /**\n   * @return {boolean}\n   */\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * Automatically configure following options\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @param {Object} cfg\n   * @private\n   */\n  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n    var ref = this;\n    var config = ref.config;\n\n    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n    }\n\n    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n      config.locationChangeAngularEmitter = 'angular' in window;\n    }\n\n    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n      config.moveGradientsOutsideSymbol = browser.isFirefox;\n    }\n  };\n\n  /**\n   * @param {Event} event\n   * @param {Object} event.detail\n   * @param {string} event.detail.oldUrl\n   * @param {string} event.detail.newUrl\n   * @private\n   */\n  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n    var ref = event.detail;\n    var oldUrl = ref.oldUrl;\n    var newUrl = ref.newUrl;\n    this.updateUrls(oldUrl, newUrl);\n  };\n\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n   * @fires Events#SYMBOL_MOUNT\n   * @param {BrowserSpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n  BrowserSprite.prototype.add = function add (symbol) {\n    var sprite = this;\n    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n    if (this.isMounted && isNewSymbol) {\n      symbol.mount(sprite.node);\n      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    }\n\n    return isNewSymbol;\n  };\n\n  /**\n   * Attach to existing DOM node\n   * @param {string|Element} target\n   * @return {Element|null} attached DOM Element. null if node to attach not found.\n   */\n  BrowserSprite.prototype.attach = function attach (target) {\n    var this$1 = this;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    /** @type Element */\n    var node = typeof target === 'string' ? document.querySelector(target) : target;\n    sprite.node = node;\n\n    // Already added symbols needs to be mounted\n    this.symbols.forEach(function (symbol) {\n      symbol.mount(sprite.node);\n      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    });\n\n    // Create symbols from existing DOM nodes, add and mount them\n    arrayFrom(node.querySelectorAll('symbol'))\n      .forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n        sprite.add(symbol);\n      });\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  BrowserSprite.prototype.destroy = function destroy () {\n    var ref = this;\n    var config = ref.config;\n    var symbols = ref.symbols;\n    var _emitter = ref._emitter;\n\n    symbols.forEach(function (s) { return s.destroy(); });\n\n    _emitter.off('*');\n    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n    if (this.isMounted) {\n      this.unmount();\n    }\n  };\n\n  /**\n   * @fires Events#MOUNT\n   * @param {string|Element} [target]\n   * @param {boolean} [prepend=false]\n   * @return {Element|null} rendered sprite node. null if mount node not found.\n   */\n  BrowserSprite.prototype.mount = function mount (target, prepend) {\n    if ( target === void 0 ) target = this.config.mountTo;\n    if ( prepend === void 0 ) prepend = false;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = sprite.render();\n    this.node = node;\n\n    if (prepend && mountNode.childNodes[0]) {\n      mountNode.insertBefore(node, mountNode.childNodes[0]);\n    } else {\n      mountNode.appendChild(node);\n    }\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSprite.prototype.render = function render () {\n    return parse(this.stringify());\n  };\n\n  /**\n   * Detach sprite from the DOM\n   */\n  BrowserSprite.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  /**\n   * Update URLs in sprite and usage elements\n   * @param {string} oldUrl\n   * @param {string} newUrl\n   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n   */\n  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n    if (!this.isMounted) {\n      return false;\n    }\n\n    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\n    updateUrls(\n      this.node,\n      usages,\n      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n      ((getUrlWithoutFragment(newUrl)) + \"#\")\n    );\n\n    return true;\n  };\n\n  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\n  return BrowserSprite;\n}(Sprite));\n\nvar ready$1 = createCommonjsModule(function (module) {\n/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  { module.exports = definition(); }\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n\n  if (!loaded)\n  { doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener);\n    loaded = 1;\n    while (listener = fns.shift()) { listener(); }\n  }); }\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn);\n  }\n\n});\n});\n\nvar spriteNodeId = '__SVG_SPRITE_NODE__';\nvar spriteGlobalVarName = '__SVG_SPRITE__';\nvar isSpriteExists = !!window[spriteGlobalVarName];\n\n// eslint-disable-next-line import/no-mutable-exports\nvar sprite;\n\nif (isSpriteExists) {\n  sprite = window[spriteGlobalVarName];\n} else {\n  sprite = new BrowserSprite({ attrs: { id: spriteNodeId } });\n  window[spriteGlobalVarName] = sprite;\n}\n\nvar loadSprite = function () {\n  /**\n   * Check for page already contains sprite node\n   * If found - attach to and reuse it's content\n   * If not - render and mount the new sprite\n   */\n  var existing = document.getElementById(spriteNodeId);\n\n  if (existing) {\n    sprite.attach(existing);\n  } else {\n    sprite.mount(document.body, true);\n  }\n};\n\nif (document.body) {\n  loadSprite();\n} else {\n  ready$1(loadSprite);\n}\n\nvar sprite$1 = sprite;\n\nreturn sprite$1;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/svg-sprite-loader/runtime/browser-sprite.build.js\n// module id = 17\n// module chunks = 63642485605921 263791100135453","var SpriteSymbol = require(\"svg-baker-runtime/browser-symbol\");\nvar sprite = require(\"svg-sprite-loader/runtime/browser-sprite.build\");\nvar symbol = new SpriteSymbol({\n  \"id\": \"download\",\n  \"use\": \"download-usage\",\n  \"viewBox\": \"0 0 24 24\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" id=\\\"download\\\"><path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\" /><path fill=\\\"#010101\\\" d=\\\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nmodule.exports = symbol\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/icon/download.icon\n// module id = 317\n// module chunks = 63642485605921","var SpriteSymbol = require(\"svg-baker-runtime/browser-symbol\");\nvar sprite = require(\"svg-sprite-loader/runtime/browser-sprite.build\");\nvar symbol = new SpriteSymbol({\n  \"id\": \"facebook\",\n  \"use\": \"facebook-usage\",\n  \"viewBox\": \"0 0 30 30\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 30 30\\\" id=\\\"facebook\\\">\\n<path d=\\\"M16.3,11.4V10c0-0.7,0.5-0.9,0.8-0.9h2V6h-2.8c-3.1,0-3.8,2.3-3.8,3.8v1.6h-1.8v2.2V15h1.8v9h3.6v-9h2.7l0.1-1.4l0.2-2.2\\n\\tH16.3z\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nmodule.exports = symbol\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/icon/facebook.icon\n// module id = 90\n// module chunks = 63642485605921 263791100135453","import React from 'react';\n\nconst Icon = ({\n  icon,\n  width,\n  height,\n  fill,\n}) => (\n  <svg viewBox={icon.viewBox} width={width} height={height} fill={fill}>\n    <use xlinkHref={`#${icon.id}`} />\n  </svg>\n);\n\nexport default Icon;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/icon/index.js","var SpriteSymbol = require(\"svg-baker-runtime/browser-symbol\");\nvar sprite = require(\"svg-sprite-loader/runtime/browser-sprite.build\");\nvar symbol = new SpriteSymbol({\n  \"id\": \"share\",\n  \"use\": \"share-usage\",\n  \"viewBox\": \"0 0 24 24\",\n  \"content\": \"<symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" viewBox=\\\"0 0 24 24\\\" id=\\\"share\\\">\\n<path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n<path d=\\\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nmodule.exports = symbol\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/icon/share.icon\n// module id = 319\n// module chunks = 63642485605921","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withPrefix } from 'gatsby-link';\nimport { showMonthDate } from '../utils';\n\nimport './issue.scss';\n\nconst Issue = ({ issue }) => {\n  const d = new Date(issue.date_of_issue);\n  const formatedDate = showMonthDate(d);\n  return (\n    <article className=\"issue\">\n      <a href={withPrefix(issue.path)} target=\"_blank\">\n        N°{issue.number} — {formatedDate}\n        <br />\n        {issue.title.toUpperCase()}\n      </a>\n    </article>\n  );\n};\n\nIssue.propTypes = {\n  issue: PropTypes.shape({\n    number: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    date_of_issue: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Issue;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/issue/index.jsx","const monthNames = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\n\nexport default {\n  showMonthDate: d => `${monthNames[d.getUTCMonth()]} ${d.getFullYear()}`,\n  showDayDate: d => `${d.getDate()} ${monthNames[d.getUTCMonth()]} ${d.getFullYear()}`,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/utils.js","/* global graphql */\n\nimport React from 'react';\nimport { withPrefix } from 'gatsby-link';\nimport Helmet from 'react-helmet';\nimport Issue from '../components/issue';\nimport Icon from '../components/icon';\nimport Facebook from '../components/icon/facebook.icon';\nimport Share from '../components/icon/share.icon';\nimport Download from '../components/icon/download.icon';\n\nconst PAGE_TITLE = 'Archives | Figure Figure';\nconst ICON_SIZE = 24;\nconst ICON_COLOR = 'black';\n\nconst getShareUri = (issue) => {\n  const path = `https://figurefigure.fr/#!publication/${issue.number}`;\n  return `https://facebook.com/sharer.php?u=${encodeURIComponent(path)}`;\n};\n\nclass ArchivePage extends React.Component {\n  constructor(props) {\n    super(props);\n    const data = props.data.allDataJson.edges[0].node;\n    this.issues = data.issues.sort((a, b) => b.number - a.number);\n    this.currentIssue = this.issues.length ? this.issues[0] : undefined;\n    this.bg = React.createRef();\n    this.share = React.createRef();\n    this.download = React.createRef();\n  }\n\n  showIssue(issue) {\n    this.bg.current.src = withPrefix(issue.archive_img);\n    this.bg.current.alt = issue.title;\n    this.share.current.href = getShareUri(issue);\n    this.download.current.href = withPrefix(issue.path);\n  }\n\n  render() {\n    return (\n      <main className=\"row\">\n        <Helmet title={PAGE_TITLE} />\n        <div className=\"col-auto issue-grid vh-site\">\n          <ul>\n            {this.issues.map(issue => (\n              <li key={`archive item ${issue.number}`} onMouseEnter={this.showIssue.bind(this, issue)}>\n                <Issue issue={issue} />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"col vh-site issue-content\">\n          <a href={withPrefix(this.currentIssue.path)}>\n            <img ref={this.bg} className=\"h-100 issue_img\" src={withPrefix(this.currentIssue.archive_img)} alt={this.currentIssue.title} />\n          </a>\n          <span className=\"h-100 issue-btn-list\">\n            <a className=\"btn\" ref={this.download} target=\"_blank\" href={withPrefix(this.currentIssue.path)} download>\n              <Icon icon={Download} width={ICON_SIZE} height={ICON_SIZE} fill={ICON_COLOR} />\n            </a>\n            <br />\n            <a className=\"btn\" ref={this.share} target=\"_blank\" href={getShareUri(this.currentIssue)}>\n              <Icon icon={Share} width={ICON_SIZE} height={ICON_SIZE} fill={ICON_COLOR} />\n            </a>\n          </span>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  query ArchiveQuery {\n    allDataJson {\n      edges {\n        node {\n          issues {\n            number\n            title\n            date_of_issue\n            path\n            image_href\n            archive_img\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/archive.jsx"],"sourceRoot":""}